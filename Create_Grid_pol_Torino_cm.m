%Programma per creare la griglia polare sia in px che in cm %%% Input: un fes%% Output: - [ Grid_Xp, Grid_Yp]  punti della griglia polare in px con              %% Nraggi e Ncerchi definiti dall'utente centrata in X0=0,Y0=0               %% cio� l'origine della figura (estremo sinistro basso), mi              %% serve per l'interpolazione dei fes   %%      - [Grid_Xp_cm, Grid_Yp_cm] punti della griglia polare in cm   %%        centrata in r=0, theta=0     %%      - r_max_cm, raggio massimo in cm    %%      - vettore del raggio da 0 a r_max_cm con passo dr %fid2=fopen('esa.FES')%[a,data]=readFesInfo('fes2_esp1.FES') LEGGE HEADER %   data1=fread(fid2, 1, 'int'); %   disp(sprintf('headerLenght %f',data1))    %%pause     %   data2=fread(fid2, 1, 'int'); %   disp(sprintf('maxFeatures %f',data2))     %   data3=fread(fid2, 1, 'ushort'); %   disp(sprintf('ImgRows %f',data3))     %   data4=fread(fid2, 1, 'ushort'); %   disp(sprintf('ImgCols %f',data4))     %   data5=fread(fid2, 1, 'ushort'); %   disp(sprintf('RoiX0 %f',data5))     %   data6=fread(fid2, 1, 'ushort'); %   disp(sprintf('RoiY0 %f',data6))       %   data7=fread(fid2, 1, 'ushort'); %   disp(sprintf('RoiWidth %f',data7))     %   data8=fread(fid2, 1, 'ushort'); %   disp(sprintf('RoiHeight %f',data8))       %   data9=fread(fid2, 1, 'ushort');     %   disp(sprintf('StartFr %f',data9))      %pause %   data10=fread(fid2, 1, 'ushort'); %   disp(sprintf('Step %f',data10))     %pause     %   data11=fread(fid2, 1, 'int'); %   disp(sprintf('FrameNumber %f',data11))    %pause %   fseek(fid2,-data1,'cof'); %   fseek(fid2,data1,'bof');%X0 = data7/2;%Y0 = data8/2;%cmpx_in = input(' Inserire il cmpx dell esp : ','s');%cmpx = sscanf(cmpx_in,'%f');    MaxRadius = 2.5;%*Tocm; %%� in centimetri        Rpoints = 0:MaxRadius/Nri:MaxRadius;    Rpoints = Rpoints(1:end-1);    Tpoints = 0:2*pi/Nti:(2*pi);    Tpoints = Tpoints(1:end-1);    % Grille polaire classique.    [GridR,GridT]=meshgrid(Rpoints,Tpoints);    % Je cree une grille cartesienne locale de coordonne x = ro theta et y    % = r a la manière de Peter L., et al. Physics of Fluids 27.8 (2015): 085111.    % Pseudo-cartesienne ou pseudo-polaire:    Ro = (max(Rpoints(Nrmin:Nrmax))-min(Rpoints(Nrmin:Nrmax)))./2. + min(Rpoints(Nrmin:Nrmax))    [GridR_2C,GridT_2C]=meshgrid(Rpoints,Ro.*Tpoints);        %% punti della griglia polare in px con centro in r=0, theta=0    Grid_Xp_cm = GridR.*cos(GridT);    Grid_Yp_cm = GridR.*sin(GridT);%__________________________________________dr=MaxRadius/Nri;r=Rpoints;%(1:Nri)*dr;dtheta = (2.*pi)/Nti;theta = [0:dtheta:2.*pi-dtheta];%__________________________________________% Beta-effect% omega = 0.206% in rad.s-1   QUESTO E' QUELLO FATTO DA SIMON% H = [1.:120.]/215.%0.56 % in metri%per il paraboloide e per la topografia di fondo%Omega = Omega /(2*pi)%conversione in s^-1 dobbiamo farla??f0=2*Omega;s = Omega^2/(2*g);Hc = H0-(s*(Lx*Lx+Ly*Ly)/12);h=Hc+(r.^2).*(s);h_fondo=(MaxRadius-r)*tan(11.*(2.*pi)/360.);H=h-h_fondo;  