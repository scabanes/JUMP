%Programma per creare la griglia polare sia in px che in cm %%% Input: un fes%% Output: - [ Grid_Xp, Grid_Yp]  punti della griglia polare in px con              %% Nraggi e Ncerchi definiti dall'utente centrata in X0=0,Y0=0               %% cio� l'origine della figura (estremo sinistro basso), mi              %% serve per l'interpolazione dei fes   %%      - [Grid_Xp_cm, Grid_Yp_cm] punti della griglia polare in cm   %%        centrata in r=0, theta=0     %%      - r_max_cm, raggio massimo in cm    %%      - vettore del raggio da 0 a r_max_cm con passo dr mtocm = 1;cmpx = 1;%% Query points grid% s_max =2*10.^(7);% en m% Rpoints = 0:pasR:s_max; % en m% Rpoints = Rpoints(1:end-1);% Tpoints = 0:2*pi/nbpT:2*pi; % en rad% Tpoints = Tpoints(1:end-1);[GridR,GridT]=meshgrid(Rpoints,Tpoints);% Je cree une grille cartesienne locale de coordonne x = ro theta et y% = r a la manière de Peter L., et al. Physics of Fluids 27.8 (2015): 085111.% Pseudo-cartesienne ou pseudo-polaire:Ro = (max(Rpoints(Nrmin:Nrmax))-min(Rpoints(Nrmin:Nrmax)))./2. + min(Rpoints(Nrmin:Nrmax))[GridR_2C,GridT_2C]=meshgrid(Rpoints,Ro.*Tpoints);    %% punti della griglia polare in px con centro in r=0, theta=0Grid_Xp = GridR.*cos(GridT);Grid_Yp = GridR.*sin(GridT);Grid_Xp_cm = Grid_Xp;Grid_Yp_cm = Grid_Yp;    r_max_cm = max(Grid_Xp_cm(:));r = Rpoints;dr = (s_max/Nri);dtheta = (2.*pi)/Nti;theta = [0:dtheta:2.*pi-dtheta];% Comes from Efluxes_Spectral_transitVasca.m load([roots,Name,'/Data2Regular_CartesianGrid_infos.mat'])Nx = length([idxmin:idxmax]);Ny = length([idymin:idymax]);if(X_max==Y_max)r_max_cm = X_max;elsedisp('Error, mais c est pas grand chose')end